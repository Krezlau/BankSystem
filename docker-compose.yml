version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: sapassword123!@#
      MSSQL_PID: Developer
    ports:
      - 1433:1433
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      database:
        aliases:
          - mssql1
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P sapassword123!@# -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
  sqlserver.configurator:
    image: mcr.microsoft.com/mssql/server:2019-latest
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    depends_on:
      sqlserver:
        condition: service_healthy
    command: >
        bash -c '
        /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P sapassword123!@# -d master -i docker-entrypoint-initdb.d/init.sql;
        echo "All done!";
        '

  webapi:
    image: mcr.microsoft.com/dotnet/aspnet:8.0
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    depends_on:
      - sqlserver
    networks:
      - database
    volumes:
      - ./ssl:/https


  angular:
    build:
      context: ./BankSystem.Frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./BankSystem.Frontend/ssl:/etc/nginx/ssl
      - ./BankSystem.Frontend/nginx.conf:/etc/nginx/conf.d/default.conf

networks:
  database:
volumes:
  sqlserver_data:
